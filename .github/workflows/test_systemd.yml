name: Test Docker Images
on:
  workflow_call:
    inputs:
      continue-on-error:
        default: false
        required: false
        type: boolean
      runner:
        default: ubuntu-22.04
        required: false
        type: string
      volume-permission:
        default: rw
        required: false
        type: string

jobs:
  test:
    runs-on: ${{ inputs.runner }}
    continue-on-error: ${{ inputs.continue-on-error }}
    steps:
      - name: Check out codebase
        uses: actions/checkout@v5

      - name: Set environment variables
        run: |
          if [ -z $(jq -r .baseos.digest baseos_digest) ]; \
          then echo "BASEOS_DIGEST=""" >> $GITHUB_ENV; \
          else echo "BASEOS_DIGEST="@$(jq -r .baseos.digest baseos_digest)"" >> $GITHUB_ENV; \
          fi

      - name: Build a test image
        run: |
          docker build --build-arg BASEOS_DIGEST=${{ env.BASEOS_DIGEST }} --tag test-image .

      - name: Create a test container
        run: >-
          docker run --name test-container --detach --privileged
          --volume /sys/fs/cgroup:/sys/fs/cgroup:${{ inputs.volume-permission }}
          --tmpfs /run --tmpfs /tmp
          --cgroupns host
          test-image

      - name: Check if container is running
        run: timeout 20s bash -c 'until [ "$(docker inspect -f {{.State.Running}} test-container)" == "true" ]; do sleep 2; done'

      - name: Test systemctl
        run: docker exec --tty test-container env TERM=xterm systemctl --version
